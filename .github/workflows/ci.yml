name: CI
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
env:
  CARGO_TERM_COLOR: always

jobs:
  lint:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/decr1x/moonzip-back:0.1.1
      options: --user root
    steps:
      - uses: actions/checkout@v3
      - name: Install yarn dependencies
        run: yarn install
      - name: Lint
        run: make lint

  test:
    env:
      APP_DB__CONN: "postgres://moonzip-admin:moonzip-admin-password@postgres:5432/moonzip-test"
      DATABASE_URL: "postgres://moonzip-admin:moonzip-admin-password@postgres:5432/moonzip-test?sslmode=disable"
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: moonzip-admin
          POSTGRES_PASSWORD: moonzip-admin-password
          POSTGRES_DB: moonzip-test
        options: >-
          --health-cmd "pg_isready -U moonzip-admin -d moonzip-test"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest
    container:
      image: ghcr.io/decr1x/moonzip-back:0.1.1
      options: --user root

    steps:
      - uses: actions/checkout@v3

      - name: List rustup toolchains
        run: rustup toolchain list

      - name: Generate new keygen
        run: solana-keygen new --no-bip39-passphrase

      - name: Set solana target cluster to local
        run: solana config set --url http:localhost:8899

      - name: Check solana config
        run: solana config get

      - name: Install yarn dependencies
        run: yarn install

      - name: Perform database migrations
        run: sqlx migrate run --source backend/db/migrations

      - name: Run tests
        run: make test
