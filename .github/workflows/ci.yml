name: CI
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  CARGO_TERM_COLOR: always

jobs:
  unit-test-codestyle:
    runs-on: self-hosted
    container:
      image: ghcr.io/decr1x/moonzip-back:0.1.3
      options: --user root
    steps:
      - uses: actions/checkout@v3
      - name: Install yarn dependencies
        run: yarn install
      - name: Lint
        run: make lint
      - name: Unit test
        run: make unit-test
      

  ext-test:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Cleanup previous environment if exists
        run: docker compose -f dev/docker-compose.dev.yml down -v || echo "Environment is clear"

      - name: Build intermediate image
        uses: docker/bake-action@v6.3.0
        with:
          files: docker/bake.ci.hcl
          allow: "fs=/builds/mzip/backend"

      - name: Prepare environment
        run: docker compose -f dev/docker-compose.dev.yml up -d --wait || docker compose -f dev/docker-compose.dev.yml logs

      - name: Run tests
        run: make ext-test

      - name: Collect services logs
        if: always()
        run: docker compose -f dev/docker-compose.dev.yml logs --no-color >& ./services_logs.txt

      - name: Archive services logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: services_logs
          path: ./services_logs.txt

      - name: Cleanup current environment
        if: always()
        run: docker compose -f dev/docker-compose.dev.yml down -v || echo "Environment is already shut"
